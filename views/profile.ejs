<%- include('partials/header') %>

<div class="profile-container">
    <!-- Profile Header Section -->
    <div class="profile-header-section">
        <div class="profile-cover">
            <div class="profile-picture-wrapper">
                <div class="profile-picture-container">
                    <% if (user.profilePicture) { %>
                        <img src="<%= user.profilePicture %>" alt="Profile Picture" class="profile-picture">
                    <% } else { %>
                        <div class="profile-initials">
                            <%= user.name.charAt(0).toUpperCase() %>
                        </div>
                    <% } %>
                </div>
                <div class="profile-picture-actions">
                    <button class="action-button primary" onclick="document.getElementById('profilePicture').click()">
                        <i class="fas fa-camera"></i>
                        Change Photo
                    </button>
                    <button class="action-button danger" onclick="resetProfilePicture()">
                        <i class="fas fa-undo"></i>
                        Reset
                    </button>
                </div>
                <input type="file" id="profilePicture" accept="image/*" style="display: none;" onchange="updateProfilePicture(event)">
            </div>
        </div>
        
        <div class="profile-info">
            <h1><%= user.name %></h1>
            <p class="profile-email"><%= user.email %></p>
        </div>
    </div>

    <!-- Profile Content Section -->
    <div class="profile-content">
        <div class="profile-card">
            <div class="card-header">
                <h2>
                    <i class="fas fa-user"></i>
                    Profile Information
                </h2>
                <button class="edit-button" onclick="toggleEdit()">
                    <i class="fas fa-edit"></i>
                    Edit
                </button>
            </div>
            <div class="profile-details" id="profileDetails">
                <div class="detail-group">
                    <label>Name</label>
                    <p><%= user.name %></p>
                </div>
                <div class="detail-group">
                    <label>Bio</label>
                    <p><%= user.bio || 'No bio added yet' %></p>
                </div>
                <div class="detail-group">
                    <label>Location</label>
                    <p><%= user.location || 'Not specified' %></p>
                </div>
                <div class="detail-group">
                    <label>Website</label>
                    <p><%= user.website || 'Not specified' %></p>
                </div>
            </div>
            <form id="editForm" style="display: none;">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" value="<%= user.name %>" required>
                </div>
                <div class="form-group">
                    <label for="bio">Bio</label>
                    <textarea id="bio" name="bio" maxlength="500"><%= user.bio || '' %></textarea>
                </div>
                <div class="form-group">
                    <label for="location">Location</label>
                    <input type="text" id="location" name="location" value="<%= user.location || '' %>">
                </div>
                <div class="form-group">
                    <label for="website">Website</label>
                    <input type="url" id="website" name="website" value="<%= user.website || '' %>">
                </div>
                <div class="form-actions">
                    <button type="submit" class="save-button">Save Changes</button>
                    <button type="button" class="cancel-button" onclick="toggleEdit()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
let isEditing = false;

function toggleEdit() {
    const profileDetails = document.getElementById('profileDetails');
    const editForm = document.getElementById('editForm');
    isEditing = !isEditing;
    
    if (isEditing) {
        profileDetails.style.display = 'none';
        editForm.style.display = 'block';
    } else {
        profileDetails.style.display = 'block';
        editForm.style.display = 'none';
    }
}

document.getElementById('editForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    try {
        const response = await fetch('/profile/update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                name: formData.get('name'),
                bio: formData.get('bio'),
                location: formData.get('location'),
                website: formData.get('website')
            })
        });
        const data = await response.json();
        if (data.error) {
            Toast.error(data.error);
        } else {
            Toast.success('Profile updated successfully');
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        }
    } catch (error) {
        Toast.error('Error updating profile');
    }
});

async function updateProfilePicture(event) {
    const file = event.target.files[0];
    if (!file) return;

    const formData = new FormData();
    formData.append('profilePicture', file);

    try {
        const response = await fetch('/profile/picture', {
            method: 'POST',
            body: formData
        });
        const data = await response.json();
        if (data.error) {
            Toast.error(data.error);
        } else {
            Toast.success('Profile picture updated successfully');
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        }
    } catch (error) {
        Toast.error('Error updating profile picture');
    }
}

async function resetProfilePicture() {
    try {
        const response = await fetch('/profile/picture/reset', {
            method: 'POST'
        });
        const data = await response.json();
        if (data.error) {
            Toast.error(data.error);
        } else {
            Toast.success('Profile picture reset successfully');
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        }
    } catch (error) {
        Toast.error('Error resetting profile picture');
    }
}
</script>

<%- include('partials/footer') %> 