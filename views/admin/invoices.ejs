<%- include('../partials/header') %>

<div class="admin-container">
    <div class="admin-card">
        <h2>
            <i class="fas fa-file-invoice"></i>
            Manage Invoices
        </h2>
        <div class="invoices-list">
            <% invoices.forEach(invoice => { %>
                <div class="invoice-item" data-invoice-id="<%= invoice.id %>">
                    <div class="invoice-info">
                        <div class="invoice-header">
                            <h3>Invoice #<%= invoice.number || 'Draft' %></h3>
                            <div class="invoice-status <%= invoice.status.toLowerCase() %>">
                                <%= invoice.status %>
                            </div>
                        </div>
                        <div class="invoice-details">
                            <p class="customer-name"><%= invoice.customer.name %></p>
                            <p class="invoice-amount">$<%= (invoice.amount_due / 100).toFixed(2) %></p>
                            <p class="invoice-date">Created: <%= new Date(invoice.created * 1000).toLocaleDateString() %></p>
                            <% if (invoice.due_date) { %>
                                <p class="invoice-due-date">Due: <%= new Date(invoice.due_date * 1000).toLocaleDateString() %></p>
                            <% } %>
                        </div>
                    </div>
                    <div class="invoice-actions">
                        <% if (invoice.status === 'draft') { %>
                            <button class="delete-btn" onclick="deleteInvoice('<%= invoice.id %>')">
                                <i class="fas fa-trash"></i> Delete Draft
                            </button>
                        <% } else { %>
                        <select class="status-select" data-invoice-id="<%= invoice.id %>">
                            <option value="open" <%= invoice.status === 'open' ? 'selected' : '' %>>Open</option>
                            <option value="paid" <%= invoice.status === 'paid' ? 'selected' : '' %>>Paid</option>
                            <option value="void" <%= invoice.status === 'void' ? 'selected' : '' %>>Void</option>
                        </select>
                        <% } %>
                        <button class="resend-btn" onclick="resendInvoice('<%= invoice.id %>')">
                            <i class="fas fa-paper-plane"></i> Resend
                        </button>
                        <% if (invoice.status !== 'draft' && invoice.hosted_invoice_url) { %>
                        <a href="<%= invoice.hosted_invoice_url %>" target="_blank" class="view-btn">
                            <i class="fas fa-external-link-alt"></i> View
                        </a>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>
</div>

<script>
document.querySelectorAll('.status-select').forEach(select => {
    select.addEventListener('change', async function() {
        const invoiceId = this.dataset.invoiceId;
        const newStatus = this.value;
        const invoiceItem = this.closest('.invoice-item');
        const statusBadge = invoiceItem.querySelector('.invoice-status');

        try {
            const response = await fetch(`/administration/invoices/${invoiceId}/status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ status: newStatus })
            });

            const data = await response.json();
            
            if (data.error) {
                Toast.error(data.error);
                // Reset select to previous value
                this.value = this.dataset.previousStatus;
            } else {
                Toast.success('Invoice status updated');
                this.dataset.previousStatus = newStatus;
                // Update the status badge
                statusBadge.textContent = newStatus.charAt(0).toUpperCase() + newStatus.slice(1);
                // Remove all status classes and add the new one
                statusBadge.className = 'invoice-status ' + newStatus.toLowerCase();
            }
        } catch (error) {
            Toast.error('An error occurred');
            this.value = this.dataset.previousStatus;
        }
    });

    // Store initial status
    select.dataset.previousStatus = select.value;
});

async function resendInvoice(invoiceId) {
    try {
        const response = await fetch(`/administration/invoices/${invoiceId}/resend`, {
            method: 'POST'
        });

        const data = await response.json();
        
        if (data.error) {
            Toast.error(data.error);
        } else {
            Toast.success('Invoice resent successfully');
        }
    } catch (error) {
        Toast.error('An error occurred');
    }
}

async function deleteInvoice(invoiceId) {
    if (!confirm('Are you sure you want to delete this draft invoice?')) {
        return;
    }
    
    try {
        const response = await fetch(`/administration/invoices/${invoiceId}/delete`, {
            method: 'DELETE'
        });

        const data = await response.json();
        
        if (data.error) {
            Toast.error(data.error);
        } else {
            Toast.success('Draft invoice deleted');
            // Find and remove the invoice element
            const invoiceElement = document.querySelector(`.invoice-item[data-invoice-id="${invoiceId}"]`);
            invoiceElement.remove();
        }
    } catch (error) {
        Toast.error('An error occurred');
    }
}
</script>

<style>
.invoices-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.invoice-item {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 1.5rem;
    transition: all 0.3s ease;
    position: relative;
}

.invoice-item:hover {
    background: rgba(255, 255, 255, 0.08);
}

.invoice-info {
    flex: 1;
}

.invoice-header {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    margin-bottom: 1rem;
}

.invoice-header h3 {
    margin: 0;
    color: var(--accent);
}

.invoice-status {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
    min-width: 80px;
    text-align: center;
}

.invoice-status.open {
    background: rgba(52, 152, 219, 0.2);
    color: #3498db;
}

.invoice-status.paid {
    background: rgba(46, 204, 113, 0.2);
    color: #2ecc71;
}

.invoice-status.void {
    background: rgba(231, 76, 60, 0.2);
    color: #e74c3c;
}

.invoice-details {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.invoice-details p {
    margin: 0;
}

.invoice-amount {
    font-weight: bold;
    color: var(--accent);
    font-size: 1.2rem;
}

.invoice-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-top: 1rem;
}

.status-select {
    padding: 0.5rem;
    border-radius: 4px;
    background: var(--card-bg);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--text);
}

.resend-btn, .view-btn {
    padding: 0.5rem 1rem;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    text-decoration: none;
}

.resend-btn {
    background: var(--accent);
    color: white;
}

.view-btn {
    background: rgba(255, 255, 255, 0.1);
    color: var(--text);
}

.resend-btn:hover, .view-btn:hover {
    opacity: 0.9;
}

.delete-btn {
    padding: 0.5rem 1rem;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    background: #e74c3c;
    color: white;
}

.delete-btn:hover {
    background: #c0392b;
}

.invoice-due-date {
    color: var(--text-secondary);
}

@media (max-width: 768px) {
    .invoice-actions {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .invoice-header h3 {
        padding-right: 100px; /* Make room for status badge */
    }
}
</style>

<%- include('../partials/footer') %> 